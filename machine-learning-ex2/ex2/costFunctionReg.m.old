function [J, grad] = costFunctionReg(theta, X, y, lambda)
%COSTFUNCTIONREG Compute cost and gradient for logistic regression with regularization
%   J = COSTFUNCTIONREG(theta, X, y, lambda) computes the cost of using
%   theta as the parameter for regularized logistic regression and the
%   gradient of the cost w.r.t. to the parameters. 

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta

%cost function

h = sigmoid(X * theta);%vector matrix
for i = 1:m
	J += -y(i)*log(h(i,:)) - (1-y(i))*log(1-h(i,:));
endfor;
J /= m;

%regularisation (skip theta0)
R = (theta'*theta - realpow(theta(1),2)) * lambda / (2 * m);

J += R;

%gradient
%theta0 without regularisation
	for i=1:m
		grad(1) += (h(i,:) - y(i)) * X(i,1);
	endfor;
	grad(1) /= m;

%theta1 ++ with regularisation
for j=2:size(theta,1)
	for i=1:m
		grad(j) += (h(i,:) - y(i)) * X(i,j);
	endfor;
	grad(j) = (grad(j) + lambda * theta(j)) / m;
endfor;

% =============================================================

end
